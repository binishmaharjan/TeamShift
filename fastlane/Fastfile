default_platform :ios

WORKSPACE_PATH = "App/TeamShift.xcworkspace"
SCHEME_NAME = "Development"
APP_IDENTIFIER = "com.binish.teamshift.dev" # <--- ðŸ‘ˆ Often better in Appfile
APPLE_ID = "legendbinish124@gmail.com"      # <--- ðŸ‘ˆ Often better in Appfile

# configuration to build
DEBUG_CONFIGURATION = "Debug"
RELEASE_CONFIGURATION = "Release"


before_all do
  # This block is run before all lanes
end

desc "Builds, archives, and exports the Release version for testing App Store distribution process"
lane :build_and_export_debug do

  gym(
    workspace: WORKSPACE_PATH,      
    scheme: SCHEME_NAME,     
    configuration: "Debug",             
    clean: true,                          
    output_directory: "./build", 
    output_name: "TeamShift-Debug.ipa", 
    export_method: "development", 
    export_options: {
      method: "development", # Corresponds to "app-store-connect"
      provisioningProfiles: {
        "com.binish.teamshift.dev" => "TeamShift[DEV]"
      },
      signingCertificate: "Apple Development",
      signingStyle: "manual",                   
      teamID: "2QZXZME53M",                    
      uploadSymbols: true                     
    }
  )

  UI.success "Successfully built, archived, and exported the Release test build!"
end

desc "Builds, archives, and exports the Release version for testing App Store distribution process"
lane :build_and_export_release do

  gym(
    workspace: WORKSPACE_PATH,      
    scheme: SCHEME_NAME,     
    configuration: "Release",             
    clean: true,                          
    output_directory: "./build", 
    output_name: "TeamShift-Release.ipa", 
    export_method: "app-store", 
    export_options: {
      method: "app-store", # Corresponds to "app-store-connect"
      provisioningProfiles: {
        "com.binish.teamshift.dev" => "TeamShift[DEV]_AppStore"
      },
      signingCertificate: "Apple Distribution",
      signingStyle: "manual",                   
      teamID: "2QZXZME53M",                    
      uploadSymbols: true                     
    }
  )

  UI.success "Successfully built, archived, and exported the Release test build!"
end

# This block is run on error
error do |lane, exception, options|
  UI.error "Oh no, an error occurred in Fastlane! ðŸ˜­"
  UI.error "Lane: #{lane}"
  UI.error "Exception: #{exception}"
  UI.error "Options: #{options}"
  # Example: Send a Slack notification on error
end